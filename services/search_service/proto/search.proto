syntax = "proto3";

package search;

option go_package = "github.com/go-park-mail-ru/2025_1_VelvetPulls/services/search_service/delivery/proto;search";

import "google/protobuf/empty.proto";

service ChatService {
  // Чат
  rpc SearchUserChats(SearchUserChatsRequest) returns (SearchUserChatsResponse);
  
  // Контакты
  rpc SearchContacts(SearchContactsRequest) returns (SearchContactsResponse);
  
  // Пользователи
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse);
  
  // Сообщения
  rpc SearchMessages(SearchMessagesRequest) returns (SearchMessagesResponse);
}

// ================== Общие типы ==================
enum ChatType {
  DIALOG = 0;
  GROUP = 1;
  CHANNEL = 2;
}

enum UserRole {
  OWNER = 0;
  MEMBER = 1;
}

// ================== Чат ==================
message SearchUserChatsRequest {
  string user_id = 1;    // UUID пользователя
  string query = 2;      // Поисковая строка
  repeated string types = 3; // Фильтр по типам чатов
}

message SearchUserChatsResponse {
  repeated Chat dialogs = 1;
  repeated Chat groups = 2;
  repeated Chat channels = 3;
}

message Chat {
  string id = 1;
  string title = 2;
  ChatType type = 3;  // Используем enum
  string avatar_path = 4;
  UserRole user_role = 5;
  int32 members_count = 6;
  string created_at = 7;
  string updated_at = 8;
  LastMessage last_message = 9;
}

message LastMessage {
  string id = 1;
  string user_id = 2;
  string username = 3;
  string body = 4;
  string sent_at = 5;
}

// ================== Контакты ==================
message SearchContactsRequest {
  string user_id = 1;  // UUID текущего пользователя
  string query = 2;    // Поисковая строка
}

message SearchContactsResponse {
  repeated Contact contacts = 1;
}

message Contact {
  string id = 1;
  string username = 2;
  string first_name = 3;
  string last_name = 4;
  string avatar_path = 5;
}

// ================== Пользователи ==================
message SearchUsersRequest {
  string query = 1;  // Поиск по username/имени
}

message SearchUsersResponse {
  repeated User users = 1;
}

message User {
  string id = 1;
  string username = 2;
  string first_name = 3;
  string last_name = 4;
  string avatar_path = 5;
}

// ================== Сообщения ==================
message SearchMessagesRequest {
  string chat_id = 1;  // UUID чата
  string query = 2;    // Поисковая строка
  int32 limit = 3;     // Пагинация
  int32 offset = 4;
}

message SearchMessagesResponse {
  repeated Message messages = 1;
  int32 total = 2;     // Общее количество найденных
}

message Message {
  string id = 1;
  string user_id = 2;
  string username = 3;
  string body = 4;
  string sent_at = 5;
  bool is_redacted = 6;
}