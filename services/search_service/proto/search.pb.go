// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: search.proto

package search

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ================== Общие типы ==================
type ChatType int32

const (
	ChatType_DIALOG  ChatType = 0
	ChatType_GROUP   ChatType = 1
	ChatType_CHANNEL ChatType = 2
)

// Enum value maps for ChatType.
var (
	ChatType_name = map[int32]string{
		0: "DIALOG",
		1: "GROUP",
		2: "CHANNEL",
	}
	ChatType_value = map[string]int32{
		"DIALOG":  0,
		"GROUP":   1,
		"CHANNEL": 2,
	}
)

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}

func (x ChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_search_proto_enumTypes[0].Descriptor()
}

func (ChatType) Type() protoreflect.EnumType {
	return &file_search_proto_enumTypes[0]
}

func (x ChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatType.Descriptor instead.
func (ChatType) EnumDescriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{0}
}

type UserRole int32

const (
	UserRole_OWNER  UserRole = 0
	UserRole_MEMBER UserRole = 1
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "OWNER",
		1: "MEMBER",
	}
	UserRole_value = map[string]int32{
		"OWNER":  0,
		"MEMBER": 1,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_search_proto_enumTypes[1].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_search_proto_enumTypes[1]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{1}
}

// ================== Чат ==================
type SearchUserChatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // UUID пользователя
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`                 // Поисковая строка
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserChatsRequest) Reset() {
	*x = SearchUserChatsRequest{}
	mi := &file_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserChatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserChatsRequest) ProtoMessage() {}

func (x *SearchUserChatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserChatsRequest.ProtoReflect.Descriptor instead.
func (*SearchUserChatsRequest) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{0}
}

func (x *SearchUserChatsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchUserChatsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchUserChatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dialogs       []*Chat                `protobuf:"bytes,1,rep,name=dialogs,proto3" json:"dialogs,omitempty"`
	Groups        []*Chat                `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Channels      []*Chat                `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserChatsResponse) Reset() {
	*x = SearchUserChatsResponse{}
	mi := &file_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserChatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserChatsResponse) ProtoMessage() {}

func (x *SearchUserChatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserChatsResponse.ProtoReflect.Descriptor instead.
func (*SearchUserChatsResponse) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{1}
}

func (x *SearchUserChatsResponse) GetDialogs() []*Chat {
	if x != nil {
		return x.Dialogs
	}
	return nil
}

func (x *SearchUserChatsResponse) GetGroups() []*Chat {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SearchUserChatsResponse) GetChannels() []*Chat {
	if x != nil {
		return x.Channels
	}
	return nil
}

type Chat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type          ChatType               `protobuf:"varint,3,opt,name=type,proto3,enum=search.ChatType" json:"type,omitempty"`
	AvatarPath    string                 `protobuf:"bytes,4,opt,name=avatar_path,json=avatarPath,proto3" json:"avatar_path,omitempty"`
	UserRole      UserRole               `protobuf:"varint,5,opt,name=user_role,json=userRole,proto3,enum=search.UserRole" json:"user_role,omitempty"`
	Participants  []*UserInChat          `protobuf:"bytes,6,rep,name=participants,proto3" json:"participants,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LastMessage   *LastMessage           `protobuf:"bytes,9,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chat) Reset() {
	*x = Chat{}
	mi := &file_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat.ProtoReflect.Descriptor instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{2}
}

func (x *Chat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chat) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chat) GetType() ChatType {
	if x != nil {
		return x.Type
	}
	return ChatType_DIALOG
}

func (x *Chat) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

func (x *Chat) GetUserRole() UserRole {
	if x != nil {
		return x.UserRole
	}
	return UserRole_OWNER
}

func (x *Chat) GetParticipants() []*UserInChat {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Chat) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Chat) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Chat) GetLastMessage() *LastMessage {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

type UserInChat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	AvatarPath    string                 `protobuf:"bytes,3,opt,name=avatar_path,json=avatarPath,proto3" json:"avatar_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInChat) Reset() {
	*x = UserInChat{}
	mi := &file_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInChat) ProtoMessage() {}

func (x *UserInChat) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInChat.ProtoReflect.Descriptor instead.
func (*UserInChat) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{3}
}

func (x *UserInChat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInChat) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInChat) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

type LastMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Body          string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	SentAt        string                 `protobuf:"bytes,5,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LastMessage) Reset() {
	*x = LastMessage{}
	mi := &file_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LastMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastMessage) ProtoMessage() {}

func (x *LastMessage) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastMessage.ProtoReflect.Descriptor instead.
func (*LastMessage) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{4}
}

func (x *LastMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LastMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LastMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LastMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *LastMessage) GetSentAt() string {
	if x != nil {
		return x.SentAt
	}
	return ""
}

// ================== Контакты ==================
type SearchContactsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchContactsRequest) Reset() {
	*x = SearchContactsRequest{}
	mi := &file_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchContactsRequest) ProtoMessage() {}

func (x *SearchContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchContactsRequest.ProtoReflect.Descriptor instead.
func (*SearchContactsRequest) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{5}
}

func (x *SearchContactsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchContactsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchContactsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contacts      []*Contact             `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchContactsResponse) Reset() {
	*x = SearchContactsResponse{}
	mi := &file_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchContactsResponse) ProtoMessage() {}

func (x *SearchContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchContactsResponse.ProtoReflect.Descriptor instead.
func (*SearchContactsResponse) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{6}
}

func (x *SearchContactsResponse) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type Contact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	FirstName     string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	AvatarPath    string                 `protobuf:"bytes,5,opt,name=avatar_path,json=avatarPath,proto3" json:"avatar_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contact) Reset() {
	*x = Contact{}
	mi := &file_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{7}
}

func (x *Contact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Contact) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Contact) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Contact) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Contact) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

// ================== Пользователи ==================
type SearchUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUsersRequest) Reset() {
	*x = SearchUsersRequest{}
	mi := &file_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersRequest) ProtoMessage() {}

func (x *SearchUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersRequest.ProtoReflect.Descriptor instead.
func (*SearchUsersRequest) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{8}
}

func (x *SearchUsersRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUsersResponse) Reset() {
	*x = SearchUsersResponse{}
	mi := &file_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersResponse) ProtoMessage() {}

func (x *SearchUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersResponse.ProtoReflect.Descriptor instead.
func (*SearchUsersResponse) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{9}
}

func (x *SearchUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	FirstName     string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	AvatarPath    string                 `protobuf:"bytes,5,opt,name=avatar_path,json=avatarPath,proto3" json:"avatar_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

// ================== Сообщения ==================
type SearchMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMessagesRequest) Reset() {
	*x = SearchMessagesRequest{}
	mi := &file_search_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMessagesRequest) ProtoMessage() {}

func (x *SearchMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMessagesRequest.ProtoReflect.Descriptor instead.
func (*SearchMessagesRequest) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{11}
}

func (x *SearchMessagesRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *SearchMessagesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchMessagesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SearchMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMessagesResponse) Reset() {
	*x = SearchMessagesResponse{}
	mi := &file_search_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMessagesResponse) ProtoMessage() {}

func (x *SearchMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMessagesResponse.ProtoReflect.Descriptor instead.
func (*SearchMessagesResponse) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{12}
}

func (x *SearchMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *SearchMessagesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Body          string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	SentAt        string                 `protobuf:"bytes,5,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	IsRedacted    bool                   `protobuf:"varint,6,opt,name=is_redacted,json=isRedacted,proto3" json:"is_redacted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_search_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{13}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Message) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Message) GetSentAt() string {
	if x != nil {
		return x.SentAt
	}
	return ""
}

func (x *Message) GetIsRedacted() bool {
	if x != nil {
		return x.IsRedacted
	}
	return false
}

var File_search_proto protoreflect.FileDescriptor

const file_search_proto_rawDesc = "" +
	"\n" +
	"\fsearch.proto\x12\x06search\"G\n" +
	"\x16SearchUserChatsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\"\x91\x01\n" +
	"\x17SearchUserChatsResponse\x12&\n" +
	"\adialogs\x18\x01 \x03(\v2\f.search.ChatR\adialogs\x12$\n" +
	"\x06groups\x18\x02 \x03(\v2\f.search.ChatR\x06groups\x12(\n" +
	"\bchannels\x18\x03 \x03(\v2\f.search.ChatR\bchannels\"\xd0\x02\n" +
	"\x04Chat\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12$\n" +
	"\x04type\x18\x03 \x01(\x0e2\x10.search.ChatTypeR\x04type\x12\x1f\n" +
	"\vavatar_path\x18\x04 \x01(\tR\n" +
	"avatarPath\x12-\n" +
	"\tuser_role\x18\x05 \x01(\x0e2\x10.search.UserRoleR\buserRole\x126\n" +
	"\fparticipants\x18\x06 \x03(\v2\x12.search.UserInChatR\fparticipants\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\tR\tupdatedAt\x126\n" +
	"\flast_message\x18\t \x01(\v2\x13.search.LastMessageR\vlastMessage\"Y\n" +
	"\n" +
	"UserInChat\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1f\n" +
	"\vavatar_path\x18\x03 \x01(\tR\n" +
	"avatarPath\"\x7f\n" +
	"\vLastMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x12\x17\n" +
	"\asent_at\x18\x05 \x01(\tR\x06sentAt\"F\n" +
	"\x15SearchContactsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\"E\n" +
	"\x16SearchContactsResponse\x12+\n" +
	"\bcontacts\x18\x01 \x03(\v2\x0f.search.ContactR\bcontacts\"\x92\x01\n" +
	"\aContact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"first_name\x18\x03 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x04 \x01(\tR\blastName\x12\x1f\n" +
	"\vavatar_path\x18\x05 \x01(\tR\n" +
	"avatarPath\"*\n" +
	"\x12SearchUsersRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"9\n" +
	"\x13SearchUsersResponse\x12\"\n" +
	"\x05users\x18\x01 \x03(\v2\f.search.UserR\x05users\"\x8f\x01\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"first_name\x18\x03 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x04 \x01(\tR\blastName\x12\x1f\n" +
	"\vavatar_path\x18\x05 \x01(\tR\n" +
	"avatarPath\"t\n" +
	"\x15SearchMessagesRequest\x12\x17\n" +
	"\achat_id\x18\x01 \x01(\tR\x06chatId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"[\n" +
	"\x16SearchMessagesResponse\x12+\n" +
	"\bmessages\x18\x01 \x03(\v2\x0f.search.MessageR\bmessages\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\x9c\x01\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x12\x17\n" +
	"\asent_at\x18\x05 \x01(\tR\x06sentAt\x12\x1f\n" +
	"\vis_redacted\x18\x06 \x01(\bR\n" +
	"isRedacted*.\n" +
	"\bChatType\x12\n" +
	"\n" +
	"\x06DIALOG\x10\x00\x12\t\n" +
	"\x05GROUP\x10\x01\x12\v\n" +
	"\aCHANNEL\x10\x02*!\n" +
	"\bUserRole\x12\t\n" +
	"\x05OWNER\x10\x00\x12\n" +
	"\n" +
	"\x06MEMBER\x10\x012\xcb\x02\n" +
	"\vChatService\x12R\n" +
	"\x0fSearchUserChats\x12\x1e.search.SearchUserChatsRequest\x1a\x1f.search.SearchUserChatsResponse\x12O\n" +
	"\x0eSearchContacts\x12\x1d.search.SearchContactsRequest\x1a\x1e.search.SearchContactsResponse\x12F\n" +
	"\vSearchUsers\x12\x1a.search.SearchUsersRequest\x1a\x1b.search.SearchUsersResponse\x12O\n" +
	"\x0eSearchMessages\x12\x1d.search.SearchMessagesRequest\x1a\x1e.search.SearchMessagesResponseB]Z[github.com/go-park-mail-ru/2025_1_VelvetPulls/services/search_service/delivery/proto;searchb\x06proto3"

var (
	file_search_proto_rawDescOnce sync.Once
	file_search_proto_rawDescData []byte
)

func file_search_proto_rawDescGZIP() []byte {
	file_search_proto_rawDescOnce.Do(func() {
		file_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_search_proto_rawDesc), len(file_search_proto_rawDesc)))
	})
	return file_search_proto_rawDescData
}

var file_search_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_search_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_search_proto_goTypes = []any{
	(ChatType)(0),                   // 0: search.ChatType
	(UserRole)(0),                   // 1: search.UserRole
	(*SearchUserChatsRequest)(nil),  // 2: search.SearchUserChatsRequest
	(*SearchUserChatsResponse)(nil), // 3: search.SearchUserChatsResponse
	(*Chat)(nil),                    // 4: search.Chat
	(*UserInChat)(nil),              // 5: search.UserInChat
	(*LastMessage)(nil),             // 6: search.LastMessage
	(*SearchContactsRequest)(nil),   // 7: search.SearchContactsRequest
	(*SearchContactsResponse)(nil),  // 8: search.SearchContactsResponse
	(*Contact)(nil),                 // 9: search.Contact
	(*SearchUsersRequest)(nil),      // 10: search.SearchUsersRequest
	(*SearchUsersResponse)(nil),     // 11: search.SearchUsersResponse
	(*User)(nil),                    // 12: search.User
	(*SearchMessagesRequest)(nil),   // 13: search.SearchMessagesRequest
	(*SearchMessagesResponse)(nil),  // 14: search.SearchMessagesResponse
	(*Message)(nil),                 // 15: search.Message
}
var file_search_proto_depIdxs = []int32{
	4,  // 0: search.SearchUserChatsResponse.dialogs:type_name -> search.Chat
	4,  // 1: search.SearchUserChatsResponse.groups:type_name -> search.Chat
	4,  // 2: search.SearchUserChatsResponse.channels:type_name -> search.Chat
	0,  // 3: search.Chat.type:type_name -> search.ChatType
	1,  // 4: search.Chat.user_role:type_name -> search.UserRole
	5,  // 5: search.Chat.participants:type_name -> search.UserInChat
	6,  // 6: search.Chat.last_message:type_name -> search.LastMessage
	9,  // 7: search.SearchContactsResponse.contacts:type_name -> search.Contact
	12, // 8: search.SearchUsersResponse.users:type_name -> search.User
	15, // 9: search.SearchMessagesResponse.messages:type_name -> search.Message
	2,  // 10: search.ChatService.SearchUserChats:input_type -> search.SearchUserChatsRequest
	7,  // 11: search.ChatService.SearchContacts:input_type -> search.SearchContactsRequest
	10, // 12: search.ChatService.SearchUsers:input_type -> search.SearchUsersRequest
	13, // 13: search.ChatService.SearchMessages:input_type -> search.SearchMessagesRequest
	3,  // 14: search.ChatService.SearchUserChats:output_type -> search.SearchUserChatsResponse
	8,  // 15: search.ChatService.SearchContacts:output_type -> search.SearchContactsResponse
	11, // 16: search.ChatService.SearchUsers:output_type -> search.SearchUsersResponse
	14, // 17: search.ChatService.SearchMessages:output_type -> search.SearchMessagesResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_search_proto_init() }
func file_search_proto_init() {
	if File_search_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_proto_rawDesc), len(file_search_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_proto_goTypes,
		DependencyIndexes: file_search_proto_depIdxs,
		EnumInfos:         file_search_proto_enumTypes,
		MessageInfos:      file_search_proto_msgTypes,
	}.Build()
	File_search_proto = out.File
	file_search_proto_goTypes = nil
	file_search_proto_depIdxs = nil
}
