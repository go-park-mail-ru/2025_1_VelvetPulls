listen_addresses = '*'   # оставил * для доступа к Postgres из других контейнеров, потому что не знаю заранее их IP
max_connections = 35    # установил 35 соединений. Основную нагрузку распределил: 50% main_app, 20% auth, 30% поиск. Оставил 5 соединений под админку
shared_buffers = 128MB
dynamic_shared_memory_type = posix

log_timezone = 'Etc/UTC'
timezone = 'Etc/UTC'
datestyle = 'iso, mdy'

lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'

statement_timeout = 5000    # решил, что 5 секунд — разумный предел для нашего мессенджера, ведь в БД хранятся только пути к файлам, а не сами файлы
lock_timeout = 1000     # поставил меньше, чем statement_timeout, чтобы не тратить слишком много времени на блокировки

log_line_prefix = '%t [%p]: [%l-1] db=%d, user=%u, app=%a, client=%h '  # задал шаблон для префикса строки лога — так проще фильтровать логи по времени, пользователю и клиенту
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d.log'    # задал шаблон имени логов по дате и времени — так их легче различать
log_min_duration_statement = 1000
log_duration = on
log_lock_waits = on

shared_preload_libraries = 'auto_explain'   # подключил библиотеку для логирования explain-запросов, чтобы можно было отследить, как выполняются тяжелые запросы
auto_explain.log_min_duration = '1s'    # логирую только те explain-запросы, что дольше 1 секунды — у нас небольшое приложение, и это помогает быстро понять узкие места
auto_explain.log_analyze = true     # включил анализ, чтобы получать не просто план, а фактические данные выполнения запроса
auto_explain.log_buffers = true     # включил статистику по буферам, чтобы понять, где тратится память и I/O
auto_explain.log_format = tex       # выбрал текстовый формат, потому что он читаемый и подходит для отладки
